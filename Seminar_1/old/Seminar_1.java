public class Seminar_1 {
    /*
     * Реализуйте метод, принимающий в качестве аргумента целочисленный массив.
     * Если длина массива меньше некоторого заданного минимума, метод возвращает -1,
     * в качестве кода ошибки, иначе - длину массива.
     */

    /*
     * Реализуйте метод, принимающий в качестве аргумента целочисленный массив и
     * некоторое значение.
     * Метод ищет в массиве заданное значение и возвращает его индекс. При этом,
     * например:
     * 1. если длина массива меньше некоторого заданного минимума, метод возвращает
     * -1, в качестве кода ошибки.
     * 2. если искомый элемент не найден, метод вернет -2 в качестве кода ошибки.
     * 3. если вместо массива пришел null, метод вернет -3
     * 4.Напишите метод, в котором реализуйте взаимодействие с пользователем.
     * То есть, этот метод запросит искомое число у пользователя, вызовет первый,
     * обработает возвращенное значение и покажет читаемый результат пользователю.
     * Например, если вернулся -2, пользователь увидит сообщение: “Искомый элемент
     * не найден”.
     */

    /*
     * Реализуйте метод, принимающий в качестве аргумента целочисленный двумерный
     * массив.
     * Необходимо посчитать и вернуть сумму элементов этого массива. При этом
     * накладываем на метод 2 ограничения:
     * метод может работать только с квадратными массивами (кол-во строк = кол-ву
     * столбцов),
     * и в каждой ячейке может лежать только значение 0 или 1. Если нарушается одно
     * из условий,
     * метод должен бросить RuntimeException с сообщением об ошибке.
     */

     /*
    return IntStream.range(0, arg.length)
                .anyMatch(i -> IntStream.range(0, arg.length)
                        .anyMatch(j -> !container.contains(arg[i][j])));
    */

    static String[][] arr = new String[][] {
            { "1", "1.5", "1.5" },
            { "1", "1.5", "1.5" },
            { "1", "1.5", "1.5" }
    };

    String[][] arr0 = new String[][] {
            { "1", "1", "1", "1", "1" },
            { "1", "1", "1", "1", "1" },
            { "1", "1", "1", "1", "1" },
            { "1", "1", "1", "1", "1" },
            { "1", "1", "1", "1", "1" }
    };

    String[][] arr2 = new String[][] {
            { "1", "1" },
            { "1", "1", "1", "1", "1" },
            { "1", "2" },
            { "3", "3" },
            { "2", "6" }
    };

    /*
* Создайте boolean метод, который запросит у пользователя поля: login, password и confirm password
Логин должен содержать только символы: a, b, c, d, e, 0,1, _, если это не так нужно бросить RuntimeException с соответствующим сообщением.
Логин должен быть не меньше 4 и не больше 8 символов, если это не так нужно бросить RuntimeException с соответствующим сообщением.
Пароль должен быть не меньше 4 и не больше 8 символов и состоять только из цифр, если это не так нужно бросить RuntimeException с соответствующим сообщением.
Пароль и его повтор должны совпадать, если это не так нужно бросить RuntimeException с соответствующим сообщением.
     */
}
